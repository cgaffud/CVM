!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
A	ternary/2D/bond.py	/^A=0$/;"	v
A	ternary/2D/bondIt.py	/^A=0$/;"	v
B	ternary/2D/bond.py	/^B=1$/;"	v
B	ternary/2D/bondIt.py	/^B=1$/;"	v
C	ternary/2D/bond.py	/^C=2$/;"	v
C	ternary/2D/bondIt.py	/^C=2$/;"	v
F	binary/1D/bond.py	/^def F(J,h,x,y,T):$/;"	f
F	binary/1D/point.py	/^def F(J,h,T,x):$/;"	f
F	binary/2D/bond.py	/^def F(J,h,x,y,T):$/;"	f
F	binary/2D/square.py	/^def F(J,h,z,T):$/;"	f
F	ternary/2D/bond.py	/^def F(J,h,y,T):$/;"	f
F	ternary/2D/bondIt.py	/^def F(E,y,T):$/;"	f
FvT	binary/1D/bond.py	/^def FvT(J, hpj=1):$/;"	f
FvT	binary/1D/point.py	/^def FvT(J, hpj=1):$/;"	f
H	binary/1D/bond.py	/^def H(J,h,x,y):$/;"	f
H	binary/1D/point.py	/^def H(J,h,x):$/;"	f
H	binary/2D/bond.py	/^def H(J,h,x,y):$/;"	f
H	binary/2D/square.py	/^def H(J,h,z):$/;"	f
H	ternary/2D/bond.py	/^def H(J,h,y):$/;"	f
H	ternary/2D/bondIt.py	/^def H(E,y):$/;"	f
Ham	binary/1D/ising1D.py	/^def Ham(s, h, J):$/;"	f
MAX_COUNTER	ternary/2D/bondIt.py	/^MAX_COUNTER=512$/;"	v
S	binary/1D/bond.py	/^def S(x, y):$/;"	f
S	binary/1D/point.py	/^def S(x):$/;"	f
S	binary/2D/bond.py	/^def S(x, y):$/;"	f
S	binary/2D/square.py	/^def S(z):$/;"	f
S	ternary/2D/bond.py	/^def S(y):$/;"	f
S	ternary/2D/bondIt.py	/^def S(y):$/;"	f
Sig	binary/1D/ising1D.py	/^def Sig(N):$/;"	f
Sp	binary/1D/bond.py	/^def Sp(x):$/;"	f
Test	binary/1D/bond.py	/^def Test():$/;"	f
X	binary/2D/square.py	/^def X(z):$/;"	f
X	ternary/2D/bond.py	/^def X(y):$/;"	f
XYvT	binary/1D/bond.py	/^def XYvT(J, hpj=1):$/;"	f
Xa	ternary/2D/bond.py	/^def Xa(y, comp):$/;"	f
Xb	ternary/2D/bond.py	/^def Xb(y, comp):$/;"	f
Xe	ternary/2D/bondIt.py	/^def Xe(y):$/;"	f
Xo	ternary/2D/bondIt.py	/^def Xo(y):$/;"	f
Xt	ternary/2D/bondIt.py	/^def Xt(y):$/;"	f
XvT	binary/1D/point.py	/^def XvT(J,hpj=1):$/;"	f
Y	binary/2D/square.py	/^def Y(z):$/;"	f
Yt	ternary/2D/bondIt.py	/^def Yt(y):$/;"	f
Z	binary/2D/bond.py	/^Z=4$/;"	v
abstot	ternary/2D/bondIt.py	/^def abstot(M):$/;"	f
add	ternary/2D/bondIt.py	/^def add(M,N):$/;"	f
debugF	binary/2D/bond.py	/^def debugF(J=1,h=1, T=1):$/;"	f
debugH	binary/2D/bond.py	/^def debugH(J=1,h=1):$/;"	f
debugTS	binary/2D/bond.py	/^def debugTS(Temp=1):$/;"	f
diff	ternary/2D/bondIt.py	/^def diff(M,N):$/;"	f
dot	ternary/2D/bond.py	/^def dot(M, N):$/;"	f
dot	ternary/2D/bondIt.py	/^def dot(M, N):$/;"	f
free	binary/2D/square.py	/^        free = lambda z: F(J, h, z, Temp[i]*abs(J))$/;"	f	function:min	file:
free	ternary/2D/bond.py	/^        free = lambda:F(J, h, y, Temp[i])$/;"	f	function:min	file:
fun	binary/1D/bond.py	/^        fun = lambda x,y: F(J, hpj*abs(J), x, y, Tpj*abs(J))$/;"	f	function:FvT	file:
fun	binary/1D/bond.py	/^        fun = lambda x: F(J, hpj*abs(J), x[0], x[1], Tpj*abs(J))$/;"	f	function:XYvT	file:
fun	binary/1D/point.py	/^        fun = lambda x: F(J, hpj*abs(J), Tpj*abs(J),x)$/;"	f	function:XvT	file:
fun	binary/1D/point.py	/^        fun = lambda x: F(J,hpj*abs(J),Tpj*abs(J),x)$/;"	f	function:FvT	file:
fun	binary/2D/bond.py	/^        fun = lambda x: F(J, hpj*abs(J), x[0], x[1], Temp[i]*abs(J))$/;"	f	function:min	file:
iterate	ternary/2D/bondIt.py	/^def iterate(ycur, Eb, T):$/;"	f
min	binary/2D/bond.py	/^def min(J=1, hpj=1, samp=200, Trang=[0,4]):$/;"	f
min	binary/2D/square.py	/^def min(J=1, hpj=1, samp=50, Trang=[0,4]):$/;"	f
min	ternary/2D/bond.py	/^def min(J=[[1,1,1],$/;"	f
min	ternary/2D/bondIt.py	/^def min(Eb=[[0,1,1],[1,0,0],[1,0,0]], Trang=[0,4], samp=200):$/;"	f
minH	binary/1D/ising1D.py	/^def minH(N,h,J):$/;"	f
mpl	binary/1D/ising1D.py	/^import matplotlib as mpl$/;"	I
norm	ternary/2D/bondIt.py	/^def norm(M):$/;"	f
np	binary/1D/bond.py	/^import numpy as np$/;"	I
np	binary/1D/ising1D.py	/^import numpy as np$/;"	I
np	binary/1D/point.py	/^import numpy as np$/;"	I
np	binary/2D/bond.py	/^import numpy as np$/;"	I
np	binary/2D/square.py	/^import numpy as np$/;"	I
np	ternary/2D/bond.py	/^import numpy as np$/;"	I
np	ternary/2D/bondIt.py	/^import numpy as np$/;"	I
opt	binary/1D/bond.py	/^import scipy.optimize as opt$/;"	I
opt	binary/1D/point.py	/^import scipy.optimize as opt$/;"	I
opt	binary/2D/bond.py	/^import scipy.optimize as opt$/;"	I
opt	binary/2D/square.py	/^import scipy.optimize as opt$/;"	I
opt	ternary/2D/bond.py	/^import scipy.optimize as opt$/;"	I
plt	binary/1D/bond.py	/^import matplotlib.pyplot as plt$/;"	I
plt	binary/1D/ising1D.py	/^import matplotlib.pyplot as plt$/;"	I
plt	binary/1D/point.py	/^import matplotlib.pyplot as plt$/;"	I
plt	binary/2D/bond.py	/^import matplotlib.pyplot as plt$/;"	I
plt	binary/2D/square.py	/^import matplotlib.pyplot as plt$/;"	I
plt	ternary/2D/bond.py	/^import matplotlib.pyplot as plt$/;"	I
plt	ternary/2D/bondIt.py	/^import matplotlib.pyplot as plt$/;"	I
tot	ternary/2D/bond.py	/^def tot(y):$/;"	f
transpose	ternary/2D/bondIt.py	/^def transpose(y):$/;"	f
xlx	binary/1D/bond.py	/^def xlx(x):$/;"	f
xlx	binary/2D/bond.py	/^def xlx(x):$/;"	f
xlx	binary/2D/square.py	/^def xlx(x):$/;"	f
xlx	ternary/2D/bond.py	/^def xlx(x):$/;"	f
xlx	ternary/2D/bondIt.py	/^def xlx(x):$/;"	f
z	ternary/2D/bondIt.py	/^z=4$/;"	v
